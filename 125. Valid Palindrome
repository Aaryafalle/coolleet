//Base Case: If l >= r, return true.
//Skip non-alphanumeric: If s[l] or s[r] is not a letter/digit, move the index and recurse.
//Compare case-insensitively: If tolower(s[l]) != tolower(s[r]), return false.
//Recursively check the next characters.


class Solution {
public:
    bool isPalindrome(string s) {
       
        int l = 0, r = s.size() - 1;

    while (l < r) {
        while (l < r && !isalnum(s[l])) l++;
        while (l < r && !isalnum(s[r])) r--;

        if (tolower(s[l]) != tolower(s[r])) return false;

        l++, r--;
    }
    return true;
    }
    
};
